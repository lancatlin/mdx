[project]
name = "mdx"
version = "0.1.0"
description = ""
authors = [
    {name = "Justin Lin",email = "wancat@wancat.cc"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "pydantic (>=2.10.6,<3.0.0)",
    "logfire (>=3.8.0,<4.0.0)",
    "pyyaml (>=6.0.2,<7.0.0)"
]

[tool.poetry]
packages = [{include = "mdx", from = "src"}]
include = ["py.typed"]

[tool.poetry.group.dev.dependencies]
mypy = "^1.8.0"
types-pyyaml = "^6.0.12.20241230"
pytest = "^8.3.5"
ruff = "^0.11.3"

[tool.mypy]
python_version = "3.12"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_optional = true
strict_equality = true

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
start = "mdx.main:main"

[tool.ruff]
select = ["E", "F", "I", "N", "W", "B"]
ignore = []
fixable = ["ALL"]
unfixable = []
